- name: download the rke2 installation script
  ansible.builtin.get_url:
    url: "{{ rke2_install_script_url }}"
    dest: /tmp/rke2.sh
    mode: 0500
  environment: "{{ proxy_env }}"
  become: true

- name: determine the type of node
  ansible.builtin.set_fact:
    rke2_type: "{{ (inventory_hostname in groups[rke2_servers_group_name]) | ternary('server', 'agent') }}"

- name: populate service facts
  ansible.builtin.service_facts:
  become: true

- name: get installed rke2 version
  ansible.builtin.shell: |
    set -o pipefail
    /usr/local/bin/rke2 --version | grep -E "rke2 version" | awk '{print $3}'
  args:
    executable: /bin/bash
  changed_when: false
  register: installed_rke2_version
  when: ("rke2-" + rke2_type + ".service") in ansible_facts['services']

- name: run the rke2 install script
  ansible.builtin.command: /tmp/rke2.sh
  environment:
    INSTALL_RKE2_VERSION: "{{ rke2_version }}"
    INSTALL_RKE2_CHANNEL_URL: "{{ rke2_channel_url }}"
    INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
    INSTALL_RKE2_TYPE: "{{ rke2_type }}"
    INSTALL_RKE2_METHOD: "{{ rke2_method }}"
    HTTP_PROXY: "{{ http_proxy }}"
    HTTPS_PROXY: "{{ http_proxy }}"
    NO_PROXY: "{{ no_proxy }}"
  when: (rke2_version != (installed_rke2_version.stdout | default({})))
        or installed_rke2_version is not defined
  become: true

- name: create rke2 config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    mode: 0755
  become: true

- name: write the rke2 config file
  ansible.builtin.template:
    src: "{{ rke2_type }}_config.yaml.j2"
    dest: /etc/rancher/rke2/config.yaml
    mode: 0600
    owner: root
    group: root
  become: true
  notify: "restart rke2-{{ rke2_type }}"

- name: write proxy settings to rke2 systemd unit env file
  ansible.builtin.template:
    src: rke2.env.j2
    dest: "/etc/default/rke2-{{ rke2_type }}"
    mode: 0644
    owner: root
    group: root
  become: true
  notify: "restart rke2-{{ rke2_type }}"

- name: create a systemd service config directory
  ansible.builtin.file:
    path: "/etc/systemd/system/rke2-{{ rke2_type }}.service.d"
    owner: root
    group: root
    mode: 0755
    state: directory
  when: inventory_hostname in groups[rke2_primary_server_group_name]
  become: true

- name: write the secret token in a systemd service configuration file
  ansible.builtin.template:
    src: rke2-token.conf.j2
    dest: "/etc/systemd/system/rke2-{{ rke2_type }}.service.d/rke2-token.conf"
    owner: root
    group: root
    mode: 0600
  when: inventory_hostname in groups[rke2_primary_server_group_name]
  become: true
  notify: "restart rke2-{{ rke2_type }}"

# Ansible might report this task as failed when in reality it just needs a
# little longer to start up.
- name: start and enable the systemd service
  ansible.builtin.systemd:
    name: "rke2-{{ rke2_type }}.service"
    state: started
    enabled: true
  become: true

- name: change server reference in kubeconfig from localhost to actual url
  ansible.builtin.replace:
    path: "{{ rke2_kubeconf_host_path }}{{ rke2_download_kubeconf_file_name }}"
    regexp: '(\s+server: https://)127\.0\.0\.1(:6443)'
    replace: '\g<1>{{ rke2_server_url }}\g<2>'
  when: rke2_type == 'server'
  become: true

- name: Add the KUBECONFIG environment variable
  ansible.builtin.template:
    src: "{{ kubeconfig_env_filename }}.j2"
    dest: "/etc/profile.d/{{ kubeconfig_env_filename }}"
    owner: root
    group: root
    mode: 0755
  when: rke2_type == 'server'
  become: true

- name: Add Rancher's bin directory to PATH
  ansible.builtin.copy:
    src: "{{ kubectl_env_filename }}"
    dest: "/etc/profile.d/{{ kubectl_env_filename }}"
    owner: root
    group: root
    mode: 0755
  become: true
